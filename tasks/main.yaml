---

- name: "get entries from the passwd database"
  ansible.builtin.getent:
    database: passwd
  check_mode: "no"
  tags:
  - "ssh"
  - "ssh:authorized-keys"

- name: "debug getent_passwd variable"
  debug:
    var: "getent_passwd"
    verbosity: 3
  check_mode: "no"
  tags:
  - "ssh"
  - "ssh:authorized-keys"

- name: "build unix users variale for templating"
  set_fact:
    ssh_authorized_keys_unix_users: "{{ ssh_authorized_keys_access |
      ssh_authorized_keys_build_unix_users(
        ssh_authorized_keys_roles, ssh_authorized_keys_users, getent_passwd) }}"
  check_mode: "no"
  tags:
  - "ssh"
  - "ssh:authorized-keys"

- name: "debug unix_users variable"
  debug:
    var: "ssh_authorized_keys_unix_users"
    verbosity: 2
  check_mode: "no"
  tags:
  - "ssh"
  - "ssh:authorized-keys"

- name: "create .ssh directory"
  ansible.builtin.file:
    path: "{{ item.home }}/.ssh"
    state: "directory"
    mode: "0700"
    owner: "{{ getent_passwd[item.login][1] }}"
    group: "{{ getent_passwd[item.login][2] }}"
  loop: "{{ ssh_authorized_keys_unix_users }}"
  tags:
  - "ssh"
  - "ssh:authorized-keys"

- name: "deploy authorized_keys file"
  ansible.builtin.template:
    src: "authorized_keys.j2"
    dest: "{{ item.home }}/.ssh/authorized_keys"
    mode: "0600"
    owner: "{{ getent_passwd[item.login][1] }}"
    group: "{{ getent_passwd[item.login][2] }}"
  loop: "{{ ssh_authorized_keys_unix_users }}"
  tags:
  - "ssh"
  - "ssh:authorized-keys"

...
